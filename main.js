/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var C=(a,t)=>{for(var e in t)o(a,e,{get:t[e],enumerable:!0})},y=(a,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of u(t))!f.call(a,n)&&n!==e&&o(a,n,{get:()=>t[n],enumerable:!(i=m(t,n))||i.enumerable});return a};var w=a=>y(o({},"__esModule",{value:!0}),a);var S={};C(S,{default:()=>r});module.exports=w(S);var s=require("obsidian"),F={delayMs:5e3,capitalisationMode:"sentence"},r=class extends s.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new p(this.app,this)),this.registerEvent(this.app.vault.on("modify",this.handleFileModify.bind(this))),this.registerEvent(this.app.vault.on("create",this.handleFileCreate.bind(this))),this.addCommand({id:"capitalise-all-file-names-sentence",name:"Capitalise all file names (Sentence case)",callback:async()=>{await this.capitaliseAllFileNames("sentence"),new s.Notice("All file names capitalised (Sentence case).")}}),this.addCommand({id:"capitalise-all-file-names-title",name:"Capitalise all file names (Title Case)",callback:async()=>{await this.capitaliseAllFileNames("title"),new s.Notice("All file names capitalised (Title Case).")}}),this.addCommand({id:"capitalise-current-file-title",name:"Capitalise current file name (Title Case)",checkCallback:e=>{let i=this.app.workspace.getActiveFile();return i?(e||(this.capitaliseFile(i,"title"),new s.Notice("Current file name capitalised (Title Case).")),!0):!1}})}async handleFileModify(e){e instanceof s.TFile&&await this.capitaliseFile(e,this.settings.capitalisationMode)}async handleFileCreate(e){e instanceof s.TFile&&window.setTimeout(async()=>{await this.capitaliseFile(e,this.settings.capitalisationMode)},this.settings.delayMs)}async capitaliseAllFileNames(e){let i=this.app.vault.getMarkdownFiles();for(let n of i)await this.capitaliseFile(n,e)}async capitaliseFile(e,i){let n=i==="title"?h(e.basename):d(e.basename),l=e.parent?e.parent.path:"",c=l?l+"/"+n+"."+e.extension:n+"."+e.extension;e.path!==c&&await this.app.fileManager.renameFile(e,c)}async loadSettings(){this.settings=Object.assign({},F,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},p=class extends s.PluginSettingTab{constructor(e,i){super(e,i);this.plugin=i}display(){let{containerEl:e}=this;e.empty(),e.createEl("p",{text:"Auto Capitalise File Names Settings"});let i,n=()=>{let l="an example_file-name",c=this.plugin.settings.capitalisationMode==="title"?h(l):d(l);i.setText(`Preview: "${l}" \u2192 "${c}"`)};new s.Setting(e).setName("Capitalisation mode").setDesc("Choose between sentence case or title case for automatic renaming.").addDropdown(l=>l.addOption("sentence","Sentence case").addOption("title","Title Case").setValue(this.plugin.settings.capitalisationMode).onChange(async c=>{this.plugin.settings.capitalisationMode=c,await this.plugin.saveSettings(),n()})),i=e.createEl("p",{cls:"setting-item-description"}),n(),new s.Setting(e).setName("Delay (ms) for new files").setDesc("Wait time before renaming a newly created file.").addText(l=>l.setValue(this.plugin.settings.delayMs.toString()).onChange(async c=>{let g=parseInt(c);isNaN(g)||(this.plugin.settings.delayMs=g,await this.plugin.saveSettings())}))}};function h(a){return typeof a!="string"?String(a):a.replace(/([^\s-_]+)/g,t=>t===t.toUpperCase()&&t.length>1?t:t.charAt(0).toUpperCase()+t.slice(1).toLowerCase())}function d(a){if(typeof a!="string")return String(a);let t=!0;return a.replace(/([^\s-_]+)/g,e=>{if(e===e.toUpperCase()&&e.length>1)return t=!1,e;let i=e.toLowerCase();return t?(t=!1,i.charAt(0).toUpperCase()+i.slice(1)):i})}
