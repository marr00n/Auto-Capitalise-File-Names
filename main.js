/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var p=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var f=(a,t)=>{for(var e in t)p(a,e,{get:t[e],enumerable:!0})},y=(a,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of u(t))!w.call(a,s)&&s!==e&&p(a,s,{get:()=>t[s],enumerable:!(n=m(t,s))||n.enumerable});return a};var C=a=>y(p({},"__esModule",{value:!0}),a);var A={};f(A,{default:()=>o});module.exports=C(A);var i=require("obsidian"),F={delayMs:5e3,capitalisationMode:"sentence"},o=class extends i.Plugin{async onload(){console.log("Auto-capitalise-file-names plugin loaded."),await this.loadSettings(),this.addSettingTab(new r(this.app,this)),this.registerEvent(this.app.vault.on("modify",this.handleFileModify.bind(this))),this.registerEvent(this.app.vault.on("create",this.handleFileCreate.bind(this))),this.addCommand({id:"capitalise-all-file-names-sentence",name:"Capitalise all file names (Sentence case)",callback:async()=>{await this.capitaliseAllFileNames("sentence"),new i.Notice("All file names capitalised (Sentence case).")}}),this.addCommand({id:"capitalise-all-file-names-title",name:"Capitalise all file names (Title case)",callback:async()=>{await this.capitaliseAllFileNames("title"),new i.Notice("All file names capitalised (Title case).")}}),this.addCommand({id:"capitalise-current-file-title",name:"Capitalise current file name (Title case)",callback:async()=>{let e=this.app.workspace.getActiveFile();e&&(await this.capitaliseFile(e,"title"),new i.Notice("Current file name capitalised (Title case)."))}})}async handleFileModify(e){e instanceof i.TFile&&await this.capitaliseFile(e,this.settings.capitalisationMode)}async handleFileCreate(e){e instanceof i.TFile&&setTimeout(async()=>{await this.capitaliseFile(e,this.settings.capitalisationMode)},this.settings.delayMs)}async capitaliseAllFileNames(e){let n=this.app.vault.getMarkdownFiles();for(let s of n)await this.capitaliseFile(s,e)}async capitaliseFile(e,n){let s=n==="title"?h(e.basename):g(e.basename),l=e.parent?e.parent.path:"",c=l?l+"/"+s+"."+e.extension:s+"."+e.extension;e.path!==c&&await this.app.fileManager.renameFile(e,c)}async loadSettings(){this.settings=Object.assign({},F,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},r=class extends i.PluginSettingTab{constructor(e,n){super(e,n);this.plugin=n}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Auto Capitalise File Names Settings"});let n,s=()=>{let l="example_file-name",c=this.plugin.settings.capitalisationMode==="title"?h(l):g(l);n.setText(`Preview: "${l}" \u2192 "${c}"`)};new i.Setting(e).setName("Capitalisation mode").setDesc("Choose between sentence case or title case for automatic renaming.").addDropdown(l=>l.addOption("sentence","Sentence case").addOption("title","Title case").setValue(this.plugin.settings.capitalisationMode).onChange(async c=>{this.plugin.settings.capitalisationMode=c,await this.plugin.saveSettings(),s()})),n=e.createEl("p",{cls:"setting-item-description"}),s(),new i.Setting(e).setName("Delay (ms) for new files").setDesc("Wait time before renaming a newly created file.").addText(l=>l.setValue(this.plugin.settings.delayMs.toString()).onChange(async c=>{let d=parseInt(c);isNaN(d)||(this.plugin.settings.delayMs=d,await this.plugin.saveSettings())}))}};function h(a){return a.split(/[-_]/g).map(t=>t.split(" ").map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join(" ")).join("-")}function g(a){let t=a.toLowerCase();return t.charAt(0).toUpperCase()+t.slice(1)}
